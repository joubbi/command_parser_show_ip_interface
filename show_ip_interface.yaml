---
- name: parser meta data
  parser_metadata:
    version: 1.0
    command: show ip interface
    network_os: ios

- name: match sections
  pattern_match:
    regex: "^(\\S+) is.*(?:up|down),"
    match_greedy: yes
    match_all: yes
  register: section

- name: match interface values
  pattern_group:
    - name: match name
      pattern_match:
        regex: "^(\\S+)"
        content: "{{ item }}"
      register: name

    - name: match IP address
      pattern_match:
        regex: "Internet address is (.*)"
        content: "{{ item }}"
      register: ip_address

    - name: match mtu
      pattern_match:
        regex: "MTU is (\\d+)"
        content: "{{ item }}"
      register: mtu

    - name: match outgoing ACL
      pattern_match:
        regex: "Outgoing access list is (.*)"
        content: "{{ item }}"
      register: outgoing_acl

    - name: match inbound ACL
      pattern_match:
              #regex: "reliability.*rxload\\s(\\S+)"
              #regex: "Inbound  access list is\\s(\\S+)"
        regex: "  Inbound  access list is (.*)"
        content: "{{ item }}"
      register: inbound_acl
  loop: "{{ section }}"
  register: interfaces

- name: generate json data structure
  json_template:
    template:
      - key: "{{ item.name.matches.0 }}"
        object:
        - key: config
          object:
            - key: name
              value: "{{ item.name.matches.0 }}"
            - key: ip_address
              value: "{{ item.ip_address.matches.0 }}"
            - key: mtu
              value: "{{ item.mtu.matches.0 }}"
            - key: outgoing_acl
              value: "{{ item.outgoing_acl.matches.0 }}"
            - key: inbound_acl
              value: "{{ item.inbound_acl.matches.0 }}"
  loop: "{{ interfaces }}"
  export: yes
  #export_as: dict
  #extend: ios_interface_facts
  register: ip_interface_facts

